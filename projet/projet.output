Grammar

    0 $accept: MAIN $end

    1 LPARAM: LPARAM ',' ID
    2       | ID
    3       | ε

    4 LINT: LINT ',' EXPR
    5     | EXPR
    6     | ε

    7 EXPR: EXPR '+' EXPR
    8     | EXPR '-' EXPR
    9     | EXPR '*' EXPR
   10     | EXPR '/' EXPR
   11     | '(' EXPR ')'
   12     | EXPR AND EXPR
   13     | EXPR OR EXPR
   14     | EXPR EQ EXPR
   15     | EXPR DIFF EXPR
   16     | NOT EXPR
   17     | EXPR SUPP_EQ EXPR
   18     | EXPR SUPP_STR EXPR
   19     | EXPR INF_EQ EXPR
   20     | EXPR INF_STR EXPR
   21     | NUM
   22     | BOOLEAN
   23     | ID
   24     | APPEL

   25 MAIN: MAIN ALGO
   26     | ALGO

   27 $@1: ε

   28 ALGO: BEG '{' ID '}' $@1 '{' LPARAM '}' BLOC END

   29 BLOC: BLOC INSTR
   30     | INSTR

   31 INSTR: SET '{' ID '}' '{' EXPR '}'

   32 $@2: ε

   33 $@3: ε

   34 INSTR: IF $@2 '{' EXPR '}' $@3 BLOC SSI

   35 $@4: ε

   36 $@5: ε

   37 $@6: ε

   38 INSTR: DOWHILE $@4 '{' EXPR '}' $@5 BLOC $@6 OD

   39 $@7: ε

   40 $@8: ε

   41 $@9: ε

   42 $@10: ε

   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR '}' $@8 '{' EXPR '}' $@9 BLOC $@10 OD
   44      | RETURN '{' EXPR '}'
   45      | APPEL

   46 $@11: ε

   47 APPEL: CALL '{' ID '}' $@11 '{' LINT '}'

   48 $@12: ε

   49 SSI: ELSE $@12 BLOC FI
   50    | FI


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 11
    ')' (41) 11
    '*' (42) 9
    '+' (43) 7
    ',' (44) 1 4
    '-' (45) 8
    '/' (47) 10
    '{' (123) 28 31 34 38 43 44 47
    '}' (125) 28 31 34 38 43 44 47
    error (256)
    OR (258) 13
    AND (259) 12
    EQ (260) 14
    DIFF (261) 15
    NOT (262) 16
    SUPP_EQ (263) 17
    INF_EQ (264) 19
    SUPP_STR (265) 18
    INF_STR (266) 20
    BEG (267) 28
    END (268) 28
    SET (269) 31
    IF (270) 34
    FI (271) 49 50
    ELSE (272) 49
    DOWHILE (273) 38
    DOFORI (274) 43
    OD (275) 38 43
    CALL (276) 47
    RETURN (277) 44
    ID <id> (278) 1 2 23 28 31 43 47
    NUM <entier> (279) 21
    BOOLEAN <entier> (280) 22


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    LPARAM (36)
        on left: 1 2 3
        on right: 1 28
    LINT <entier> (37)
        on left: 4 5 6
        on right: 4 47
    EXPR <t_synth> (38)
        on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
        on right: 4 5 7 8 9 10 11 12 13 14 15 16 17 18 19 20 31 34 38 43 44
    MAIN (39)
        on left: 25 26
        on right: 0 25
    ALGO (40)
        on left: 28
        on right: 25 26
    $@1 (41)
        on left: 27
        on right: 28
    BLOC (42)
        on left: 29 30
        on right: 28 29 34 38 43 49
    INSTR (43)
        on left: 31 34 38 43 44 45
        on right: 29 30
    $@2 (44)
        on left: 32
        on right: 34
    $@3 (45)
        on left: 33
        on right: 34
    $@4 (46)
        on left: 35
        on right: 38
    $@5 (47)
        on left: 36
        on right: 38
    $@6 (48)
        on left: 37
        on right: 38
    $@7 (49)
        on left: 39
        on right: 43
    $@8 (50)
        on left: 40
        on right: 43
    $@9 (51)
        on left: 41
        on right: 43
    $@10 (52)
        on left: 42
        on right: 43
    APPEL <t_synth> (53)
        on left: 47
        on right: 24 45
    $@11 (54)
        on left: 46
        on right: 47
    SSI (55)
        on left: 49 50
        on right: 34
    $@12 (56)
        on left: 48
        on right: 49


State 0

    0 $accept: • MAIN $end

    BEG  shift, and go to state 1

    MAIN  go to state 2
    ALGO  go to state 3


State 1

   28 ALGO: BEG • '{' ID '}' $@1 '{' LPARAM '}' BLOC END

    '{'  shift, and go to state 4


State 2

    0 $accept: MAIN • $end
   25 MAIN: MAIN • ALGO

    $end  shift, and go to state 5
    BEG   shift, and go to state 1

    ALGO  go to state 6


State 3

   26 MAIN: ALGO •

    $default  reduce using rule 26 (MAIN)


State 4

   28 ALGO: BEG '{' • ID '}' $@1 '{' LPARAM '}' BLOC END

    ID  shift, and go to state 7


State 5

    0 $accept: MAIN $end •

    $default  accept


State 6

   25 MAIN: MAIN ALGO •

    $default  reduce using rule 25 (MAIN)


State 7

   28 ALGO: BEG '{' ID • '}' $@1 '{' LPARAM '}' BLOC END

    '}'  shift, and go to state 8


State 8

   28 ALGO: BEG '{' ID '}' • $@1 '{' LPARAM '}' BLOC END

    $default  reduce using rule 27 ($@1)

    $@1  go to state 9


State 9

   28 ALGO: BEG '{' ID '}' $@1 • '{' LPARAM '}' BLOC END

    '{'  shift, and go to state 10


State 10

   28 ALGO: BEG '{' ID '}' $@1 '{' • LPARAM '}' BLOC END

    ID  shift, and go to state 11

    $default  reduce using rule 3 (LPARAM)

    LPARAM  go to state 12


State 11

    2 LPARAM: ID •

    $default  reduce using rule 2 (LPARAM)


State 12

    1 LPARAM: LPARAM • ',' ID
   28 ALGO: BEG '{' ID '}' $@1 '{' LPARAM • '}' BLOC END

    ','  shift, and go to state 13
    '}'  shift, and go to state 14


State 13

    1 LPARAM: LPARAM ',' • ID

    ID  shift, and go to state 15


State 14

   28 ALGO: BEG '{' ID '}' $@1 '{' LPARAM '}' • BLOC END

    SET      shift, and go to state 16
    IF       shift, and go to state 17
    DOWHILE  shift, and go to state 18
    DOFORI   shift, and go to state 19
    CALL     shift, and go to state 20
    RETURN   shift, and go to state 21

    BLOC   go to state 22
    INSTR  go to state 23
    APPEL  go to state 24


State 15

    1 LPARAM: LPARAM ',' ID •

    $default  reduce using rule 1 (LPARAM)


State 16

   31 INSTR: SET • '{' ID '}' '{' EXPR '}'

    '{'  shift, and go to state 25


State 17

   34 INSTR: IF • $@2 '{' EXPR '}' $@3 BLOC SSI

    $default  reduce using rule 32 ($@2)

    $@2  go to state 26


State 18

   38 INSTR: DOWHILE • $@4 '{' EXPR '}' $@5 BLOC $@6 OD

    $default  reduce using rule 35 ($@4)

    $@4  go to state 27


State 19

   43 INSTR: DOFORI • '{' ID '}' $@7 '{' EXPR '}' $@8 '{' EXPR '}' $@9 BLOC $@10 OD

    '{'  shift, and go to state 28


State 20

   47 APPEL: CALL • '{' ID '}' $@11 '{' LINT '}'

    '{'  shift, and go to state 29


State 21

   44 INSTR: RETURN • '{' EXPR '}'

    '{'  shift, and go to state 30


State 22

   28 ALGO: BEG '{' ID '}' $@1 '{' LPARAM '}' BLOC • END
   29 BLOC: BLOC • INSTR

    END      shift, and go to state 31
    SET      shift, and go to state 16
    IF       shift, and go to state 17
    DOWHILE  shift, and go to state 18
    DOFORI   shift, and go to state 19
    CALL     shift, and go to state 20
    RETURN   shift, and go to state 21

    INSTR  go to state 32
    APPEL  go to state 24


State 23

   30 BLOC: INSTR •

    $default  reduce using rule 30 (BLOC)


State 24

   45 INSTR: APPEL •

    $default  reduce using rule 45 (INSTR)


State 25

   31 INSTR: SET '{' • ID '}' '{' EXPR '}'

    ID  shift, and go to state 33


State 26

   34 INSTR: IF $@2 • '{' EXPR '}' $@3 BLOC SSI

    '{'  shift, and go to state 34


State 27

   38 INSTR: DOWHILE $@4 • '{' EXPR '}' $@5 BLOC $@6 OD

    '{'  shift, and go to state 35


State 28

   43 INSTR: DOFORI '{' • ID '}' $@7 '{' EXPR '}' $@8 '{' EXPR '}' $@9 BLOC $@10 OD

    ID  shift, and go to state 36


State 29

   47 APPEL: CALL '{' • ID '}' $@11 '{' LINT '}'

    ID  shift, and go to state 37


State 30

   44 INSTR: RETURN '{' • EXPR '}'

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 43
    APPEL  go to state 44


State 31

   28 ALGO: BEG '{' ID '}' $@1 '{' LPARAM '}' BLOC END •

    $default  reduce using rule 28 (ALGO)


State 32

   29 BLOC: BLOC INSTR •

    $default  reduce using rule 29 (BLOC)


State 33

   31 INSTR: SET '{' ID • '}' '{' EXPR '}'

    '}'  shift, and go to state 45


State 34

   34 INSTR: IF $@2 '{' • EXPR '}' $@3 BLOC SSI

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 46
    APPEL  go to state 44


State 35

   38 INSTR: DOWHILE $@4 '{' • EXPR '}' $@5 BLOC $@6 OD

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 47
    APPEL  go to state 44


State 36

   43 INSTR: DOFORI '{' ID • '}' $@7 '{' EXPR '}' $@8 '{' EXPR '}' $@9 BLOC $@10 OD

    '}'  shift, and go to state 48


State 37

   47 APPEL: CALL '{' ID • '}' $@11 '{' LINT '}'

    '}'  shift, and go to state 49


State 38

   16 EXPR: NOT • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 50
    APPEL  go to state 44


State 39

   23 EXPR: ID •

    $default  reduce using rule 23 (EXPR)


State 40

   21 EXPR: NUM •

    $default  reduce using rule 21 (EXPR)


State 41

   22 EXPR: BOOLEAN •

    $default  reduce using rule 22 (EXPR)


State 42

   11 EXPR: '(' • EXPR ')'

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 51
    APPEL  go to state 44


State 43

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR
   44 INSTR: RETURN '{' EXPR • '}'

    OR        shift, and go to state 52
    AND       shift, and go to state 53
    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63
    '}'       shift, and go to state 64


State 44

   24 EXPR: APPEL •

    $default  reduce using rule 24 (EXPR)


State 45

   31 INSTR: SET '{' ID '}' • '{' EXPR '}'

    '{'  shift, and go to state 65


State 46

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR
   34 INSTR: IF $@2 '{' EXPR • '}' $@3 BLOC SSI

    OR        shift, and go to state 52
    AND       shift, and go to state 53
    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63
    '}'       shift, and go to state 66


State 47

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR
   38 INSTR: DOWHILE $@4 '{' EXPR • '}' $@5 BLOC $@6 OD

    OR        shift, and go to state 52
    AND       shift, and go to state 53
    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63
    '}'       shift, and go to state 67


State 48

   43 INSTR: DOFORI '{' ID '}' • $@7 '{' EXPR '}' $@8 '{' EXPR '}' $@9 BLOC $@10 OD

    $default  reduce using rule 39 ($@7)

    $@7  go to state 68


State 49

   47 APPEL: CALL '{' ID '}' • $@11 '{' LINT '}'

    $default  reduce using rule 46 ($@11)

    $@11  go to state 69


State 50

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   16     | NOT EXPR •
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    $default  reduce using rule 16 (EXPR)


State 51

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   11     | '(' EXPR • ')'
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    OR        shift, and go to state 52
    AND       shift, and go to state 53
    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63
    ')'       shift, and go to state 70


State 52

   13 EXPR: EXPR OR • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 71
    APPEL  go to state 44


State 53

   12 EXPR: EXPR AND • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 72
    APPEL  go to state 44


State 54

   14 EXPR: EXPR EQ • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 73
    APPEL  go to state 44


State 55

   15 EXPR: EXPR DIFF • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 74
    APPEL  go to state 44


State 56

   17 EXPR: EXPR SUPP_EQ • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 75
    APPEL  go to state 44


State 57

   19 EXPR: EXPR INF_EQ • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 76
    APPEL  go to state 44


State 58

   18 EXPR: EXPR SUPP_STR • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 77
    APPEL  go to state 44


State 59

   20 EXPR: EXPR INF_STR • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 78
    APPEL  go to state 44


State 60

    7 EXPR: EXPR '+' • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 79
    APPEL  go to state 44


State 61

    8 EXPR: EXPR '-' • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 80
    APPEL  go to state 44


State 62

    9 EXPR: EXPR '*' • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 81
    APPEL  go to state 44


State 63

   10 EXPR: EXPR '/' • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 82
    APPEL  go to state 44


State 64

   44 INSTR: RETURN '{' EXPR '}' •

    $default  reduce using rule 44 (INSTR)


State 65

   31 INSTR: SET '{' ID '}' '{' • EXPR '}'

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 83
    APPEL  go to state 44


State 66

   34 INSTR: IF $@2 '{' EXPR '}' • $@3 BLOC SSI

    $default  reduce using rule 33 ($@3)

    $@3  go to state 84


State 67

   38 INSTR: DOWHILE $@4 '{' EXPR '}' • $@5 BLOC $@6 OD

    $default  reduce using rule 36 ($@5)

    $@5  go to state 85


State 68

   43 INSTR: DOFORI '{' ID '}' $@7 • '{' EXPR '}' $@8 '{' EXPR '}' $@9 BLOC $@10 OD

    '{'  shift, and go to state 86


State 69

   47 APPEL: CALL '{' ID '}' $@11 • '{' LINT '}'

    '{'  shift, and go to state 87


State 70

   11 EXPR: '(' EXPR ')' •

    $default  reduce using rule 11 (EXPR)


State 71

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   13     | EXPR OR EXPR •
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    AND       shift, and go to state 53
    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63

    $default  reduce using rule 13 (EXPR)


State 72

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   12     | EXPR AND EXPR •
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63

    $default  reduce using rule 12 (EXPR)


State 73

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   14     | EXPR EQ EXPR •
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63

    $default  reduce using rule 14 (EXPR)


State 74

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   15     | EXPR DIFF EXPR •
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63

    $default  reduce using rule 15 (EXPR)


State 75

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   17     | EXPR SUPP_EQ EXPR •
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63

    $default  reduce using rule 17 (EXPR)


State 76

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   19     | EXPR INF_EQ EXPR •
   20     | EXPR • INF_STR EXPR

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63

    $default  reduce using rule 19 (EXPR)


State 77

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   18     | EXPR SUPP_STR EXPR •
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63

    $default  reduce using rule 18 (EXPR)


State 78

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR
   20     | EXPR INF_STR EXPR •

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63

    $default  reduce using rule 20 (EXPR)


State 79

    7 EXPR: EXPR • '+' EXPR
    7     | EXPR '+' EXPR •
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    '*'  shift, and go to state 62
    '/'  shift, and go to state 63

    $default  reduce using rule 7 (EXPR)


State 80

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    8     | EXPR '-' EXPR •
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    '*'  shift, and go to state 62
    '/'  shift, and go to state 63

    $default  reduce using rule 8 (EXPR)


State 81

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
    9     | EXPR '*' EXPR •
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    $default  reduce using rule 9 (EXPR)


State 82

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   10     | EXPR '/' EXPR •
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    $default  reduce using rule 10 (EXPR)


State 83

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR
   31 INSTR: SET '{' ID '}' '{' EXPR • '}'

    OR        shift, and go to state 52
    AND       shift, and go to state 53
    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63
    '}'       shift, and go to state 88


State 84

   34 INSTR: IF $@2 '{' EXPR '}' $@3 • BLOC SSI

    SET      shift, and go to state 16
    IF       shift, and go to state 17
    DOWHILE  shift, and go to state 18
    DOFORI   shift, and go to state 19
    CALL     shift, and go to state 20
    RETURN   shift, and go to state 21

    BLOC   go to state 89
    INSTR  go to state 23
    APPEL  go to state 24


State 85

   38 INSTR: DOWHILE $@4 '{' EXPR '}' $@5 • BLOC $@6 OD

    SET      shift, and go to state 16
    IF       shift, and go to state 17
    DOWHILE  shift, and go to state 18
    DOFORI   shift, and go to state 19
    CALL     shift, and go to state 20
    RETURN   shift, and go to state 21

    BLOC   go to state 90
    INSTR  go to state 23
    APPEL  go to state 24


State 86

   43 INSTR: DOFORI '{' ID '}' $@7 '{' • EXPR '}' $@8 '{' EXPR '}' $@9 BLOC $@10 OD

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 91
    APPEL  go to state 44


State 87

   47 APPEL: CALL '{' ID '}' $@11 '{' • LINT '}'

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    $default  reduce using rule 6 (LINT)

    LINT   go to state 92
    EXPR   go to state 93
    APPEL  go to state 44


State 88

   31 INSTR: SET '{' ID '}' '{' EXPR '}' •

    $default  reduce using rule 31 (INSTR)


State 89

   29 BLOC: BLOC • INSTR
   34 INSTR: IF $@2 '{' EXPR '}' $@3 BLOC • SSI

    SET      shift, and go to state 16
    IF       shift, and go to state 17
    FI       shift, and go to state 94
    ELSE     shift, and go to state 95
    DOWHILE  shift, and go to state 18
    DOFORI   shift, and go to state 19
    CALL     shift, and go to state 20
    RETURN   shift, and go to state 21

    INSTR  go to state 32
    APPEL  go to state 24
    SSI    go to state 96


State 90

   29 BLOC: BLOC • INSTR
   38 INSTR: DOWHILE $@4 '{' EXPR '}' $@5 BLOC • $@6 OD

    SET      shift, and go to state 16
    IF       shift, and go to state 17
    DOWHILE  shift, and go to state 18
    DOFORI   shift, and go to state 19
    CALL     shift, and go to state 20
    RETURN   shift, and go to state 21

    $default  reduce using rule 37 ($@6)

    INSTR  go to state 32
    $@6    go to state 97
    APPEL  go to state 24


State 91

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR
   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR • '}' $@8 '{' EXPR '}' $@9 BLOC $@10 OD

    OR        shift, and go to state 52
    AND       shift, and go to state 53
    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63
    '}'       shift, and go to state 98


State 92

    4 LINT: LINT • ',' EXPR
   47 APPEL: CALL '{' ID '}' $@11 '{' LINT • '}'

    ','  shift, and go to state 99
    '}'  shift, and go to state 100


State 93

    5 LINT: EXPR •
    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    OR        shift, and go to state 52
    AND       shift, and go to state 53
    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63

    $default  reduce using rule 5 (LINT)


State 94

   50 SSI: FI •

    $default  reduce using rule 50 (SSI)


State 95

   49 SSI: ELSE • $@12 BLOC FI

    $default  reduce using rule 48 ($@12)

    $@12  go to state 101


State 96

   34 INSTR: IF $@2 '{' EXPR '}' $@3 BLOC SSI •

    $default  reduce using rule 34 (INSTR)


State 97

   38 INSTR: DOWHILE $@4 '{' EXPR '}' $@5 BLOC $@6 • OD

    OD  shift, and go to state 102


State 98

   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR '}' • $@8 '{' EXPR '}' $@9 BLOC $@10 OD

    $default  reduce using rule 40 ($@8)

    $@8  go to state 103


State 99

    4 LINT: LINT ',' • EXPR

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 104
    APPEL  go to state 44


State 100

   47 APPEL: CALL '{' ID '}' $@11 '{' LINT '}' •

    $default  reduce using rule 47 (APPEL)


State 101

   49 SSI: ELSE $@12 • BLOC FI

    SET      shift, and go to state 16
    IF       shift, and go to state 17
    DOWHILE  shift, and go to state 18
    DOFORI   shift, and go to state 19
    CALL     shift, and go to state 20
    RETURN   shift, and go to state 21

    BLOC   go to state 105
    INSTR  go to state 23
    APPEL  go to state 24


State 102

   38 INSTR: DOWHILE $@4 '{' EXPR '}' $@5 BLOC $@6 OD •

    $default  reduce using rule 38 (INSTR)


State 103

   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR '}' $@8 • '{' EXPR '}' $@9 BLOC $@10 OD

    '{'  shift, and go to state 106


State 104

    4 LINT: LINT ',' EXPR •
    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR

    OR        shift, and go to state 52
    AND       shift, and go to state 53
    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63

    $default  reduce using rule 4 (LINT)


State 105

   29 BLOC: BLOC • INSTR
   49 SSI: ELSE $@12 BLOC • FI

    SET      shift, and go to state 16
    IF       shift, and go to state 17
    FI       shift, and go to state 107
    DOWHILE  shift, and go to state 18
    DOFORI   shift, and go to state 19
    CALL     shift, and go to state 20
    RETURN   shift, and go to state 21

    INSTR  go to state 32
    APPEL  go to state 24


State 106

   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR '}' $@8 '{' • EXPR '}' $@9 BLOC $@10 OD

    NOT      shift, and go to state 38
    CALL     shift, and go to state 20
    ID       shift, and go to state 39
    NUM      shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    '('      shift, and go to state 42

    EXPR   go to state 108
    APPEL  go to state 44


State 107

   49 SSI: ELSE $@12 BLOC FI •

    $default  reduce using rule 49 (SSI)


State 108

    7 EXPR: EXPR • '+' EXPR
    8     | EXPR • '-' EXPR
    9     | EXPR • '*' EXPR
   10     | EXPR • '/' EXPR
   12     | EXPR • AND EXPR
   13     | EXPR • OR EXPR
   14     | EXPR • EQ EXPR
   15     | EXPR • DIFF EXPR
   17     | EXPR • SUPP_EQ EXPR
   18     | EXPR • SUPP_STR EXPR
   19     | EXPR • INF_EQ EXPR
   20     | EXPR • INF_STR EXPR
   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR '}' $@8 '{' EXPR • '}' $@9 BLOC $@10 OD

    OR        shift, and go to state 52
    AND       shift, and go to state 53
    EQ        shift, and go to state 54
    DIFF      shift, and go to state 55
    SUPP_EQ   shift, and go to state 56
    INF_EQ    shift, and go to state 57
    SUPP_STR  shift, and go to state 58
    INF_STR   shift, and go to state 59
    '+'       shift, and go to state 60
    '-'       shift, and go to state 61
    '*'       shift, and go to state 62
    '/'       shift, and go to state 63
    '}'       shift, and go to state 109


State 109

   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR '}' $@8 '{' EXPR '}' • $@9 BLOC $@10 OD

    $default  reduce using rule 41 ($@9)

    $@9  go to state 110


State 110

   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR '}' $@8 '{' EXPR '}' $@9 • BLOC $@10 OD

    SET      shift, and go to state 16
    IF       shift, and go to state 17
    DOWHILE  shift, and go to state 18
    DOFORI   shift, and go to state 19
    CALL     shift, and go to state 20
    RETURN   shift, and go to state 21

    BLOC   go to state 111
    INSTR  go to state 23
    APPEL  go to state 24


State 111

   29 BLOC: BLOC • INSTR
   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR '}' $@8 '{' EXPR '}' $@9 BLOC • $@10 OD

    SET      shift, and go to state 16
    IF       shift, and go to state 17
    DOWHILE  shift, and go to state 18
    DOFORI   shift, and go to state 19
    CALL     shift, and go to state 20
    RETURN   shift, and go to state 21

    $default  reduce using rule 42 ($@10)

    INSTR  go to state 32
    $@10   go to state 112
    APPEL  go to state 24


State 112

   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR '}' $@8 '{' EXPR '}' $@9 BLOC $@10 • OD

    OD  shift, and go to state 113


State 113

   43 INSTR: DOFORI '{' ID '}' $@7 '{' EXPR '}' $@8 '{' EXPR '}' $@9 BLOC $@10 OD •

    $default  reduce using rule 43 (INSTR)
